name: Build and Release Executables

on:
  release:
    types: [created]

jobs:
  build:
    name: Build for ${{ matrix.desc }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # ===== Linux =====
          - os: linux
            arch: x86_64
            runs_on: ubuntu-latest
            py_arch: x64
            desc: linux-x86_64
          - os: linux
            arch: arm64
            runs_on: ubuntu-24.04-arm64
            py_arch: arm64
            desc: linux-arm64

          # ===== Windows =====
          - os: windows
            arch: x86_64
            runs_on: windows-latest
            py_arch: x64
            desc: windows-x86_64

          # ===== macOS =====
          # macOS-13 为 Intel x86_64，macOS-14 为 Apple Silicon arm64
          - os: macos
            arch: x86_64
            runs_on: macos-13
            py_arch: x64
            desc: macos-x86_64
          - os: macos
            arch: arm64
            runs_on: macos-14
            py_arch: arm64
            desc: macos-arm64

    runs-on: ${{ matrix.runs_on }}

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # 安装对应架构的 Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: ${{ matrix.py_arch }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller
        shell: bash

      - name: Build with PyInstaller
        run: |
          mkdir -p dist
          pyinstaller --onefile --name TJUEcardSetup setup.py
          pyinstaller --onefile --noconsole --name TJUEcard main.py
        shell: bash

      # ===== 重命名产物 =====
      - name: Rename (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          set -eux
          mv dist/TJUEcardSetup "dist/TJUEcardSetup-${{ matrix.os }}-${{ matrix.arch }}"
          mv dist/TJUEcard     "dist/TJUEcard-${{ matrix.os }}-${{ matrix.arch }}"
        shell: bash

      - name: Rename (Windows)
        if: runner.os == 'Windows'
        run: |
          Rename-Item dist\TJUEcardSetup.exe "TJUEcardSetup-${{ matrix.os }}-${{ matrix.arch }}.exe"
          Rename-Item dist\TJUEcard.exe      "TJUEcard-${{ matrix.os }}-${{ matrix.arch }}.exe"
        shell: pwsh

      # ===== 验证架构 =====
      - name: Check binary arch (Linux)
        if: runner.os == 'Linux'
        run: |
          file "dist/TJUEcardSetup-${{ matrix.os }}-${{ matrix.arch }}"
          file "dist/TJUEcard-${{ matrix.os }}-${{ matrix.arch }}"
        shell: bash

      - name: Check binary arch (macOS)
        if: runner.os == 'macOS'
        run: |
          lipo -info "dist/TJUEcardSetup-${{ matrix.os }}-${{ matrix.arch }}" || true
          lipo -info "dist/TJUEcard-${{ matrix.os }}-${{ matrix.arch }}" || true
        shell: bash

      - name: Check binary arch (Windows)
        if: runner.os == 'Windows'
        run: |
          if (Get-Command dumpbin -ErrorAction SilentlyContinue) {
            dumpbin /headers "dist\TJUEcardSetup-${{ matrix.os }}-${{ matrix.arch }}.exe" | Select-String -Pattern "machine"
            dumpbin /headers "dist\TJUEcard-${{ matrix.os }}-${{ matrix.arch }}.exe" | Select-String -Pattern "machine"
          } else {
            Write-Host "dumpbin not found; skipping arch check."
          }
        shell: pwsh

      # ===== 上传到 Release =====
      - name: Upload executables to Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.release.name }}
          body: ${{ github.event.release.body }}
          files: |
            dist/TJUEcardSetup-*
            dist/TJUEcard-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
